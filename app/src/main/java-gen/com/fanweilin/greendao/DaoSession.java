package com.fanweilin.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.fanweilin.greendao.ShowData;
import com.fanweilin.greendao.CoordinateData;
import com.fanweilin.greendao.PictureData;
import com.fanweilin.greendao.PointData;
import com.fanweilin.greendao.Files;
import com.fanweilin.greendao.Olfiles;
import com.fanweilin.greendao.SqlPolyline;
import com.fanweilin.greendao.SqlPolygon;
import com.fanweilin.greendao.Sqlpoint;

import com.fanweilin.greendao.ShowDataDao;
import com.fanweilin.greendao.CoordinateDataDao;
import com.fanweilin.greendao.PictureDataDao;
import com.fanweilin.greendao.PointDataDao;
import com.fanweilin.greendao.FilesDao;
import com.fanweilin.greendao.OlfilesDao;
import com.fanweilin.greendao.SqlPolylineDao;
import com.fanweilin.greendao.SqlPolygonDao;
import com.fanweilin.greendao.SqlpointDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig showDataDaoConfig;
    private final DaoConfig coordinateDataDaoConfig;
    private final DaoConfig pictureDataDaoConfig;
    private final DaoConfig pointDataDaoConfig;
    private final DaoConfig filesDaoConfig;
    private final DaoConfig olfilesDaoConfig;
    private final DaoConfig sqlPolylineDaoConfig;
    private final DaoConfig sqlPolygonDaoConfig;
    private final DaoConfig sqlpointDaoConfig;

    private final ShowDataDao showDataDao;
    private final CoordinateDataDao coordinateDataDao;
    private final PictureDataDao pictureDataDao;
    private final PointDataDao pointDataDao;
    private final FilesDao filesDao;
    private final OlfilesDao olfilesDao;
    private final SqlPolylineDao sqlPolylineDao;
    private final SqlPolygonDao sqlPolygonDao;
    private final SqlpointDao sqlpointDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        showDataDaoConfig = daoConfigMap.get(ShowDataDao.class).clone();
        showDataDaoConfig.initIdentityScope(type);

        coordinateDataDaoConfig = daoConfigMap.get(CoordinateDataDao.class).clone();
        coordinateDataDaoConfig.initIdentityScope(type);

        pictureDataDaoConfig = daoConfigMap.get(PictureDataDao.class).clone();
        pictureDataDaoConfig.initIdentityScope(type);

        pointDataDaoConfig = daoConfigMap.get(PointDataDao.class).clone();
        pointDataDaoConfig.initIdentityScope(type);

        filesDaoConfig = daoConfigMap.get(FilesDao.class).clone();
        filesDaoConfig.initIdentityScope(type);

        olfilesDaoConfig = daoConfigMap.get(OlfilesDao.class).clone();
        olfilesDaoConfig.initIdentityScope(type);

        sqlPolylineDaoConfig = daoConfigMap.get(SqlPolylineDao.class).clone();
        sqlPolylineDaoConfig.initIdentityScope(type);

        sqlPolygonDaoConfig = daoConfigMap.get(SqlPolygonDao.class).clone();
        sqlPolygonDaoConfig.initIdentityScope(type);

        sqlpointDaoConfig = daoConfigMap.get(SqlpointDao.class).clone();
        sqlpointDaoConfig.initIdentityScope(type);

        showDataDao = new ShowDataDao(showDataDaoConfig, this);
        coordinateDataDao = new CoordinateDataDao(coordinateDataDaoConfig, this);
        pictureDataDao = new PictureDataDao(pictureDataDaoConfig, this);
        pointDataDao = new PointDataDao(pointDataDaoConfig, this);
        filesDao = new FilesDao(filesDaoConfig, this);
        olfilesDao = new OlfilesDao(olfilesDaoConfig, this);
        sqlPolylineDao = new SqlPolylineDao(sqlPolylineDaoConfig, this);
        sqlPolygonDao = new SqlPolygonDao(sqlPolygonDaoConfig, this);
        sqlpointDao = new SqlpointDao(sqlpointDaoConfig, this);

        registerDao(ShowData.class, showDataDao);
        registerDao(CoordinateData.class, coordinateDataDao);
        registerDao(PictureData.class, pictureDataDao);
        registerDao(PointData.class, pointDataDao);
        registerDao(Files.class, filesDao);
        registerDao(Olfiles.class, olfilesDao);
        registerDao(SqlPolyline.class, sqlPolylineDao);
        registerDao(SqlPolygon.class, sqlPolygonDao);
        registerDao(Sqlpoint.class, sqlpointDao);
    }
    
    public void clear() {
        showDataDaoConfig.clearIdentityScope();
        coordinateDataDaoConfig.clearIdentityScope();
        pictureDataDaoConfig.clearIdentityScope();
        pointDataDaoConfig.clearIdentityScope();
        filesDaoConfig.clearIdentityScope();
        olfilesDaoConfig.clearIdentityScope();
        sqlPolylineDaoConfig.clearIdentityScope();
        sqlPolygonDaoConfig.clearIdentityScope();
        sqlpointDaoConfig.clearIdentityScope();
    }

    public ShowDataDao getShowDataDao() {
        return showDataDao;
    }

    public CoordinateDataDao getCoordinateDataDao() {
        return coordinateDataDao;
    }

    public PictureDataDao getPictureDataDao() {
        return pictureDataDao;
    }

    public PointDataDao getPointDataDao() {
        return pointDataDao;
    }

    public FilesDao getFilesDao() {
        return filesDao;
    }

    public OlfilesDao getOlfilesDao() {
        return olfilesDao;
    }

    public SqlPolylineDao getSqlPolylineDao() {
        return sqlPolylineDao;
    }

    public SqlPolygonDao getSqlPolygonDao() {
        return sqlPolygonDao;
    }

    public SqlpointDao getSqlpointDao() {
        return sqlpointDao;
    }

}
